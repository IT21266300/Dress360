/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/blenderStuff/femaleModal/Female.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Body: THREE.Mesh;
    Body001: THREE.Mesh;
    Body002: THREE.Mesh;
    Body006: THREE.Mesh;
    Outer_eye: THREE.Mesh;
    Outer_eye001: THREE.Mesh;
    Sphere_1: THREE.Mesh;
    Sphere_2: THREE.Mesh;
    Sphere_3: THREE.Mesh;
    Sphere_4: THREE.Mesh;
    Sphere003: THREE.Mesh;
    Sphere003_1: THREE.Mesh;
    Sphere003_2: THREE.Mesh;
    Sphere003_3: THREE.Mesh;
    Eyebrows: THREE.Mesh;
    Eyelashes: THREE.Mesh;
  };
  materials: {
    Body: THREE.MeshStandardMaterial;
    Eyelashes: THREE.MeshStandardMaterial;
  };
  animations: THREE.AnimationClip[];
};

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Model(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "../../../blenderStuff/femaleModal/Female.glb"
  ) as GLTFResult;

  materials.Body.color = new THREE.Color(0x4656);
  return (
    <group
      {...props}
      dispose={null}
      position={[0, -2.5, 0]}
      scale={[2.8, 2.8, 2.8]}
    >
      <mesh geometry={nodes.Body.geometry} material={materials.Body}>
        <mesh geometry={nodes.Body001.geometry} material={materials.Body} />
        <mesh geometry={nodes.Body002.geometry} material={materials.Body} />
      </mesh>
      <mesh geometry={nodes.Body006.geometry} material={materials.Body} />
      <mesh
        geometry={nodes.Outer_eye.geometry}
        material={materials.Body}
        position={[0.036, 1.795, 0.083]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        scale={0.022}
      />
      <mesh
        geometry={nodes.Outer_eye001.geometry}
        material={materials.Body}
        position={[-0.036, 1.795, 0.083]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        scale={0.022}
      />
      <group
        position={[0.036, 1.795, 0.083]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        scale={0.022}
      >
        <mesh
          geometry={nodes.Sphere_1.geometry}
          material={nodes.Sphere_1.material}
        />
        <mesh
          geometry={nodes.Sphere_2.geometry}
          material={nodes.Sphere_2.material}
        />
        <mesh
          geometry={nodes.Sphere_3.geometry}
          material={nodes.Sphere_3.material}
        />
        <mesh
          geometry={nodes.Sphere_4.geometry}
          material={nodes.Sphere_4.material}
        />
      </group>
      <group
        position={[-0.036, 1.795, 0.083]}
        rotation={[Math.PI / 2, Math.PI / 2, 0]}
        scale={0.022}
      >
        <mesh
          geometry={nodes.Sphere003.geometry}
          material={nodes.Sphere003.material}
        />
        <mesh
          geometry={nodes.Sphere003_1.geometry}
          material={nodes.Sphere003_1.material}
        />
        <mesh
          geometry={nodes.Sphere003_2.geometry}
          material={nodes.Sphere003_2.material}
        />
        <mesh
          geometry={nodes.Sphere003_3.geometry}
          material={nodes.Sphere003_3.material}
        />
      </group>
      <mesh
        geometry={nodes.Eyebrows.geometry}
        material={materials.Eyelashes}
        position={[0.033, 1.815, 0.116]}
      />
      <mesh
        geometry={nodes.Eyelashes.geometry}
        material={materials.Eyelashes}
        position={[0.037, 1.795, 0.108]}
        rotation={[-1.428, 0.032, 0.213]}
        scale={0.012}
      />
    </group>
  );
}

useGLTF.preload('../../../blenderStuff/femaleModal/Female.glb')
